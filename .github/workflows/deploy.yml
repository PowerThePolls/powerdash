# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [master]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v1.4.4
        with:
          node-version: 12

      - name: create service.json
        run: echo $SERVICE_JSON > $GITHUB_WORKSPACE/service.json
        env:
          SERVICE_JSON: ${{ secrets.SERVICE_JSON }}

      - name: npm install dependencies
        run: npm install

      # Deploy to serverless
      - name: Serverless
        uses: serverless/github-action@v1.53.0
        with:
          args: deploy
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          PTP_HOST: ${{ secrets.PTP_HOST }}
          PTP_USER: ${{ secrets.PTP_USER }}
          PTP_PASS: ${{ secrets.PTP_PASS }}
          PTP_DB: ${{ secrets.PTP_DB }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          BASE_SHEET: ${{ secrets.BASE_SHEET }}
          TEMPLATE_BASE: ${{ secrets.TEMPLATE_BASE }}
          TEMPLATE_PII: ${{ secrets.TEMPLATE_PII }}
          SLACK_HOOK: ${{ secrets.SLACK_HOOK }}
          ERROR_SLACK_HOOK: ${{ secrets.ERROR_SLACK_HOOK }}
          SS_AUTH_ID: ${{ secrets.SS_AUTH_ID }}
          SS_AUTH_TOKEN: ${{ secrets.SS_AUTH_TOKEN }}
          MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
          SRC_AWS_ACCESS_KEY: ${{ secrets.SRC_AWS_ACCESS_KEY }}
          SRC_AWS_SECRET_KEY: ${{ secrets.SRC_AWS_SECRET_KEY }}
